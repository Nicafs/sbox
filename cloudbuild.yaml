steps:
  # parse envs
  - name: 'gcr.io/cloud-builders/yarn'
    entrypoint: 'bash'
    args:
      ['-c', 'echo $$$_SECRET_NAME > secret.json && node ci_github/parseEnv.js']
    secretEnv: ['CE_REACT_CORE', 'CE_REACT_CORE_PORTOCRED']

  # dependencias
  - name: 'gcr.io/cloud-builders/yarn'
    entrypoint: 'bash'
    args: ['-c', 'export NPM_TOKEN=$$NPM_TOKEN && yarn install']
    secretEnv: ['NPM_TOKEN']
    waitFor: ['-']
    id: 'instalacao-dependencias'

  #testes
  # - name: 'gcr.io/cloud-builders/yarn'
  #   entrypoint: 'bash'
  #   args: ['-c', 'export NPM_TOKEN=$$NPM_TOKEN &&  yarn test']
  #   secretEnv: ['NPM_TOKEN']
  #   waitFor: ['instalacao-dependencias'] ##

  # build (build/build.tar.bz2)
  - name: 'gcr.io/cloud-builders/yarn'
    entrypoint: 'bash'
    args: ['-c', './ci_github/build.sh']
    env:
      - 'NPM_TOKEN=$_NPM_TOKEN'
      - 'ENV=$_ENV'
      - 'GENERATE_SOURCEMAP=false'
    waitFor: ['instalacao-dependencias']
    id: 'build'

  # deploy
  - name: gcr.io/$PROJECT_ID/firebase
    entrypoint: 'bash'
    args:
      [
        '-c',
        'if [ "$_DEPLOY_FIREBASE" == "true" ]; then firebase deploy --project=$_PROJECT_ALIAS --only=hosting:$_PROJECT_ALIAS ; fi',
      ]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/CE_REACT_CORE/versions/latest
      env: 'CE_REACT_CORE'
    - versionName: projects/$PROJECT_ID/secrets/CE_REACT_CORE_PORTOCRED/versions/latest
      env: 'CE_REACT_CORE_PORTOCRED'
    - versionName: projects/$PROJECT_ID/secrets/CB_NPM_TOKEN/versions/latest
      env: 'NPM_TOKEN'
options:
  machineType: 'E2_HIGHCPU_8'
timeout: 1200s
artifacts:
  objects:
    location: 'gs://ce-builds-$_ENV/$_GCS_OUTPUT_FOLDER'
    paths: ['build/build.tar.bz2']
